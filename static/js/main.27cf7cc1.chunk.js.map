{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","recipes","loaded","createGrid","bind","recipe_object","Col","href","target","className","src","this","replaceOpenWithThumbnail","rows","count","length","console","log","push","Row","buildCol","fields","link","replace","axios","get","then","res","data","setState","Container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAkFeA,E,kDAzEZ,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAKTC,MAAQ,CACLC,QAAS,GACTC,QAAQ,GALR,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAHF,E,qDAWVC,GACN,OACG,cAACC,EAAA,EAAD,UACG,mBAAGC,KAAMF,EAAa,YAAiBG,OAAO,SAA9C,SACG,gCACG,qBACGC,UAAU,YACVC,IAAKC,KAAKC,yBACPP,EAAa,WAGnB,4BAAIA,EAAa,uB,mCAS7B,IADA,IAAIQ,EAAO,GACFC,EAAQ,EAAGA,EAAQH,KAAKX,MAAMC,QAAQc,OAAQD,GAAS,EAC7DE,QAAQC,IAAIH,EAAQ,KAAKH,KAAKX,MAAMC,SAChCa,EAAQ,KAAKH,KAAKX,MAAMC,QACzBY,EAAKK,KACF,eAACC,EAAA,EAAD,WACIR,KAAKS,SAAST,KAAKX,MAAMC,QAAQa,GAAOO,QACxCV,KAAKS,SAAST,KAAKX,MAAMC,QAAQa,EAAQ,GAAGO,YAInDR,EAAKK,KACF,cAACC,EAAA,EAAD,UAAMR,KAAKS,SAAST,KAAKX,MAAMC,QAAQa,GAAOO,WAIvD,OAAOR,I,+CAGeS,GACtB,OAAOA,EAAKC,QAAQ,SAAU,iB,0CAGZ,IAAD,OACZZ,KAAKX,MAAME,QAAwC,IAA9BS,KAAKX,MAAMC,QAAQc,QAC1CS,IACIC,IADJ,+DAEIC,MAAK,SAACC,GACJX,QAAQC,IAAIU,EAAIC,KAAKf,MACrB,EAAKgB,SAAS,CAAE5B,QAAS0B,EAAIC,KAAKf,KAAMX,QAAQ,S,+BAKzD,OACG,sBAAKO,UAAU,MAAf,UACG,oBAAIA,UAAU,QAAd,uCACA,cAACqB,EAAA,EAAD,UAAYnB,KAAKR,sB,GApEX4B,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.27cf7cc1.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Row from \"react-bootstrap/Row\";\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n\n      this.createGrid = this.createGrid.bind(this);\n   }\n\n   state = {\n      recipes: [],\n      loaded: false,\n   };\n\n   buildCol(recipe_object) {\n      return (\n         <Col>\n            <a href={recipe_object[\"Recipe_Link\"]} target=\"_blank\">\n               <div>\n                  <img\n                     className=\"ImageSize\"\n                     src={this.replaceOpenWithThumbnail(\n                        recipe_object[\"Picture\"]\n                     )}\n                  />\n                  <p>{recipe_object[\"Recipe_Name\"]}</p>\n               </div>\n            </a>\n         </Col>\n      );\n   }\n\n   createGrid() {\n      let rows = [];\n      for (let count = 0; count < this.state.recipes.length; count += 2) {\n         console.log(count + 1 in this.state.recipes);\n         if (count + 1 in this.state.recipes) {\n            rows.push(\n               <Row>\n                  {this.buildCol(this.state.recipes[count].fields)}\n                  {this.buildCol(this.state.recipes[count + 1].fields)}\n               </Row>\n            );\n         } else {\n            rows.push(\n               <Row>{this.buildCol(this.state.recipes[count].fields)}</Row>\n            );\n         }\n      }\n      return rows;\n   }\n\n   replaceOpenWithThumbnail(link) {\n      return link.replace(\"/open?\", \"/thumbnail?\");\n   }\n\n   componentDidMount() {\n      if (!this.state.loaded && this.state.recipes.length === 0) {\n         axios\n            .get(`https://kennethjchow.api.stdlib.com/bevelyn-recipe-api@dev/`)\n            .then((res) => {\n               console.log(res.data.rows);\n               this.setState({ recipes: res.data.rows, loaded: true });\n            });\n      }\n   }\n   render() {\n      return (\n         <div className=\"App\">\n            <h3 className=\"Title\">Baking with Bevelyn Links</h3>\n            <Container>{this.createGrid()}</Container>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}